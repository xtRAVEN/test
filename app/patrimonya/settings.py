"""

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import dj_database_url
import django_heroku
import os
from django.utils.translation import gettext_lazy as _
BASE_DIR = Path(__file__).resolve().parent.parent

# SECRET_KEY = os.environ.get('SECRET_KEY')
SECRET_KEY = "v3tz7r8d^e3*df^vd0mi_ok3lzxf7ugaldv&@ble_p)qc_j7i6"

DEBUG = False

# ALLOWED_HOSTS = ['patrimonya-6c503671ad25.herokuapp.com']
# if DEBUG:
ALLOWED_HOSTS = ['*']


INSTALLED_APPS = [
    'jazzmin',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'rest_framework',
    'rest_framework_gis',
     # Auth
    # "allauth_ui",
    # 'allauth',
    # 'allauth.account',
    # "widget_tweaks",
    # "slippers",
    # apps
    'parcel',
    'combustibleworkflow',
    'foncierworkflow',
    'upaworkflow',
    'occupationtempworkflow',

    # 3rd party
    # 'crispy_forms',
    # "crispy_bootstrap5",
    # "django_htmx",
    'dal',
    'dal_select2',
    "corsheaders",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    'django.middleware.locale.LocaleMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # "django_htmx.middleware.HtmxMiddleware",
   
]

# if DEBUG:
#DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'

#     STORAGES = {
#     # ...
#     "staticfiles": {
#         "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
#     },
# }


ROOT_URLCONF = "patrimonya.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "patrimonya.wsgi.application"


# if DEBUG:

# DATABASES = {
#     "default": {
#         "ENGINE": "django.contrib.gis.db.backends.postgis",
#         "NAME": "patri",  # Use the name of your existing database
#         "USER": "postgres",  # Use the user of your existing database
#         "PASSWORD": "root",  # Use the password of your existing database
#         "HOST": "localhost",  # Use the host of your existing database
#         "PORT": "5432",
#     }
# }
# else:

DATABASE_URL = 'postgres://postgres:5AbceEd3daFefAFcfcAEg6B5E1DDC5E6@autorack.proxy.rlwy.net:23645/railway'  # Replace with your database URL

# Parse the DATABASE_URL
db_config = dj_database_url.parse(DATABASE_URL, conn_max_age=600, ssl_require=True)

# Ensure the engine is set to use postgis
db_config['ENGINE'] = 'django.contrib.gis.db.backends.postgis'

DATABASES = {
    'default': db_config
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.contrib.gis.db.backends.postgis',
#         'NAME': 'railway',
#         'USER': 'postgres',
#         'PASSWORD': 'HlnimhVCSdQWSKAmYwSGOumrwRgGHhdN',
#         'HOST': 'postgres.railway.internal',
#         'PORT': 5432,
#     }
# }

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

LANGUAGES = [
    ('en', _('English')),
    ('fr', _('French')),
]

# LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]
TIME_ZONE = "UTC"

USE_I18N = True  # Enables internationalization
USE_L10N = True  # Enables localization of formats
USE_TZ = True

# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "dist",
    BASE_DIR / "public",
]

# STATIC_ROOT = BASE_DIR / "static"
STATIC_ROOT = '/app/static/'



DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# LOGIN_URL = 'login/'
# LOGIN_REDIRECT_URL = 'index'

SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Store session data in the database
SESSION_COOKIE_AGE = 1209600  # 2 weeks
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


JAZZMIN_UI_TWEAKS = {
    "theme": "flatly",
}

# CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
# CRISPY_TEMPLATE_PACK = "bootstrap5"


# settings.py

JAZZMIN_SETTINGS = {
    "site_title": "Patrimonya Administrator",
    "site_header": "Patrimonya Administrator",
    "site_brand": "Patrimonya Admin",  # HTML for Font Awesome icon and text
    "custom_css": "css/custom_admin.css",
    # Other Jazzmin settings
    
}
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),  # Short access token lifespan
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),     # Longer refresh token lifespan
    'ROTATE_REFRESH_TOKENS': False,                 # No refresh token rotation
    'BLACKLIST_AFTER_ROTATION': False,              # Disable blacklisting
}

CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOW_CREDENTIALS = True

# CORS_ALLOWED_ORIGINS = [
#     # "http://patrimonya.local",
#     "http://127.0.0.1:8000",
    

#     # "http://127.0.0.1:5173",
#     # "http://mydjango.local:5173",
#     # "https://patrimonya-6c503671ad25.herokuapp.com",
# ]



# EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST = "smtp-relay.sendinblue.com"
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = "7a1a39001@smtp-brevo.com"  # Replace with your Sendinblue SMTP username (usually your email)
# EMAIL_HOST_PASSWORD = "UOPTHwvKN9ytrmFA"  # Replace with your Sendinblue SMTP password
# # DEFAULT_FROM_EMAIL = "xtravenn@gmail.com" 


# ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_EMAIL_VERIFICATION = "mandatory"  # or "optional" depending on your preference
# ACCOUNT_AUTHENTICATION_METHOD = "email"
# ACCOUNT_UNIQUE_EMAIL = True



# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# # Base URL for media files

# # Django storage backend for S3-compatible Backblaze B2
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# # Backblaze B2 Credentials and Configuration
# AWS_ACCESS_KEY_ID = 'fa3ec6c85521'                   # Replace with your Backblaze application key ID
# AWS_SECRET_ACCESS_KEY = '003ef479538016711cbd324c868a5c1a69c5920270'  # Replace with your application key
# AWS_STORAGE_BUCKET_NAME = 'patrimonya'               # Your Backblaze B2 bucket name
# AWS_S3_REGION_NAME = 'eu-central-003'                # Your Backblaze B2 region
# AWS_S3_ENDPOINT_URL = f'https://s3.{AWS_S3_REGION_NAME}.backblazeb2.com'

# # Optional: Control public or private access to the files
# AWS_DEFAULT_ACL = 'private'  # or 'public-read' if files should be publicly accessible

AWS_ACCESS_KEY_ID = '003fa3ec6c855210000000001'  # Updated Application Key ID
AWS_SECRET_ACCESS_KEY = 'K003Q6Khgu2CeWwqr1trq8udPzbOpk0'  # Updated Application Key
AWS_STORAGE_BUCKET_NAME = 'patrimonya'  # Updated Bucket ID
AWS_S3_ENDPOINT_URL = 'https://s3.eu-central-003.backblazeb2.com'  # Backblaze S3 endpoint
AWS_S3_REGION_NAME = 'eu-central-003'  # Region for Backblaze B2 (eu-central-003)
AWS_DEFAULT_ACL = None  # To avoid automatic public access to files

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# Optional: Media URL to serve files via Backblaze
MEDIA_URL = f'https://{AWS_STORAGE_BUCKET_NAME}.s3.eu-central-003.backblazeb2.com/'



